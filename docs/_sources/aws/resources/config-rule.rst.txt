.. File Generated By c7n-sphinxext from source. Do not edit.

.. _aws.config-rule:

aws.config-rule
===============




Filters
-------


  - :ref:`config-compliance <aws.common.filters.config-compliance>`
  
  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`marked-for-op <aws.common.filters.marked-for-op>`
  
  - :ref:`ops-item <aws.common.filters.ops-item>`
  
  - :ref:`reduce <aws.common.filters.reduce>`
  
  - :ref:`remediation <aws.config-rule.filters.remediation>`

  - :ref:`status <aws.config-rule.filters.status>`

  - :ref:`tag-count <aws.common.filters.tag-count>`
  
  - :ref:`value <aws.common.filters.value>`
  


.. _aws.config-rule.filters.remediation:

remediation
+++++++++++
Filter to look for config rules that match the given remediation configuration settings

This filter can be used in conjunction with account missing filter to look for
managed config rules with missing remediation and to enable it accordingly.

:example:

.. code-block:: yaml

    policies:
      - name: config-managed-s3-bucket-public-write-remediate-event-with-filter
        description: |
          This policy detects if S3 bucket allows public write by the bucket policy
          or ACL and remediates.
        comment: |
          This policy detects if S3 bucket policy or ACL allows public write access.
          When the bucket is evaluated as 'NON_COMPLIANT', the action
          'AWS-DisableS3BucketPublicReadWrite' is triggered and remediates.
        resource: account
        filters:
          - type: missing
            policy:
              resource: config-rule
              filters:
                - type: remediation
                  rule_name: &rule_name 'config-managed-s3-bucket-public-write-remediate-event'
                  remediation: &remediation-config
                    TargetId: AWS-DisableS3BucketPublicReadWrite
                    Automatic: true
                    MaximumAutomaticAttempts: 5
                    RetryAttemptSeconds: 211
                    Parameters:
                      AutomationAssumeRole:
                        StaticValue:
                          Values:
                            - 'arn:aws:iam::{account_id}:role/myrole'
                      S3BucketName:
                        ResourceValue:
                          Value: RESOURCE_ID
        actions:
          - type: toggle-config-managed-rule
            rule_name: *rule_name
            managed_rule_id: S3_BUCKET_PUBLIC_WRITE_PROHIBITED
            resource_types:
              - 'AWS::S3::Bucket'
            rule_parameters: '{}'
            remediation: *remediation-config

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      remediation:
        properties:
          automatic:
            type: boolean
          execution_controls:
            type: object
          maximum_automatic_attempts:
            maximum: 25
            minimum: 1
            type: integer
          parameters:
            type: object
          retry_attempt_seconds:
            maximum: 2678000
            minimum: 1
            type: integer
          target_id:
            type: string
          target_type:
            type: string
        type: object
      rule_name:
        type: string
      rule_prefix:
        type: string
      type:
        enum:
        - remediation
    required:
    - type




Permissions - config:DescribeRemediationConfigurations


.. _aws.config-rule.filters.status:

status
++++++


.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - status
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
        - version
    required:
    - type




Permissions - config:DescribeConfigRuleEvaluationStatus




Actions
-------


  - :ref:`auto-tag-user <aws.common.actions.auto-tag-user>`
  
  - :ref:`copy-related-tag <aws.common.actions.copy-related-tag>`
  
  - :ref:`delete <aws.config-rule.actions.delete>`

  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`invoke-sfn <aws.common.actions.invoke-sfn>`
  
  - :ref:`mark-for-op <aws.common.actions.mark-for-op>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`post-item <aws.common.actions.post-item>`
  
  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`remove-tag <aws.common.actions.remove-tag>`
  
  - :ref:`tag <aws.common.actions.tag>`
  
  - :ref:`webhook <aws.common.actions.webhook>`
  



.. _aws.config-rule.actions.delete:

delete
++++++
Parent base class for filters and actions.
    

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - delete
    required:
    - type




Permissions - config:DeleteConfigRule

