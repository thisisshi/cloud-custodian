.. File Generated By c7n-sphinxext from source. Do not edit.

.. _aws.iam-profile:

aws.iam-profile
===============




Filters
-------


  - :ref:`config-compliance <aws.common.filters.config-compliance>`
  
  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`has-specific-managed-policy <aws.iam-profile.filters.has-specific-managed-policy>`

  - :ref:`ops-item <aws.common.filters.ops-item>`
  
  - :ref:`reduce <aws.common.filters.reduce>`
  
  - :ref:`unused <aws.iam-profile.filters.unused>`

  - :ref:`used <aws.iam-profile.filters.used>`

  - :ref:`value <aws.common.filters.value>`
  


.. _aws.iam-profile.filters.has-specific-managed-policy:

has-specific-managed-policy
+++++++++++++++++++++++++++
Filter an IAM instance profile that contains an IAM role that has a specific managed IAM
   policy. If an IAM instance profile does not contain an IAM role, then it will be treated
   as not having the policy.

:example:

Check for instance profile roles with 'admin-policy' attached:

.. code-block:: yaml

    policies:
      - name: iam-profiles-have-admin
        resource: aws.iam-profile
        filters:
          - type: has-specific-managed-policy
            value: admin-policy

:example:

Check for instance profile roles with an attached policy matching
a given list:

.. code-block:: yaml

    policies:
      - name: iam-profiles-with-selected-policies
        resource: aws.iam-profile
        filters:
          - type: has-specific-managed-policy
            value:
              - AmazonS3FullAccess
              - AWSOrganizationsFullAccess

:example:

Check for instance profile roles with attached policy names matching
a pattern:

.. code-block:: yaml

    policies:
      - name: iam-profiles-with-full-access-policies
        resource: aws.iam-profile
        filters:
          - type: has-specific-managed-policy
            op: glob
            value: "*FullAccess"

Check for instance profile roles with attached policy ARNs matching
a pattern:

.. code-block:: yaml

    policies:
      - name: iam-profiles-with-aws-full-access-policies
        resource: aws.iam-profile
        filters:
          - type: has-specific-managed-policy
            key: PolicyArn
            op: regex
            value: "arn:aws:iam::aws:policy/.*FullAccess"

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - has-specific-managed-policy
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
        - version
    required:
    - type




Permissions - iam:ListAttachedRolePolicies


.. _aws.iam-profile.filters.unused:

unused
++++++
Filter IAM profiles that are not being used

:example:

.. code-block:: yaml

    policies:
      - name: iam-instance-profiles-not-in-use
        resource: iam-profile
        filters:
          - type: unused

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - unused
    required:
    - type




Permissions - lambda:ListFunctions, autoscaling:DescribeLaunchConfigurations, ec2:DescribeInstances, ec2:DescribeTags, ecs:DescribeClusters, ecs:DescribeServices


.. _aws.iam-profile.filters.used:

used
++++
Filter IAM profiles that are being used.

:example:

.. code-block:: yaml

    policies:
      - name: iam-instance-profiles-in-use
        resource: iam-profile
        filters:
          - type: used

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - used
    required:
    - type




Permissions - lambda:ListFunctions, autoscaling:DescribeLaunchConfigurations, ec2:DescribeInstances, ec2:DescribeTags, ecs:DescribeClusters, ecs:DescribeServices




Actions
-------


  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`invoke-sfn <aws.common.actions.invoke-sfn>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`post-item <aws.common.actions.post-item>`
  
  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`set-role <aws.iam-profile.actions.set-role>`

  - :ref:`webhook <aws.common.actions.webhook>`
  



.. _aws.iam-profile.actions.set-role:

set-role
++++++++
Upserts specified role name for IAM instance profiles.
   Instance profile roles are removed when empty role name is specified.

:example:

.. code-block:: yaml

    policies:
      - name: iam-instance-profile-set-role
        resource: iam-profile
        actions:
            - type: set-role
              role: my-test-role

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      role:
        type: string
      type:
        enum:
        - set-role
    required:
    - type




Permissions - iam:AddRoleToInstanceProfile, iam:RemoveRoleFromInstanceProfile

