name: "Functional"

env:
  terraform_version: "1.2.8"
  C7N_FUNCTIONAL: true
  C7N_TEST_RUN: true

on:
  workflow_dispatch: {}
  schedule:
    # UTC 6 AM aka 11 PM PST, 2 AM EST, everyday
    - cron: "0 6 * * *"

jobs:
  AWS:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4.2.0
        with:
          python-version: "3.8"

      - uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "${{ env.terraform_version }}"

      - name: Install Requirements
        run: |
          mkdir -p .tfcache
          pip install --cache-dir=./.pip-cache -r requirements.txt

      - name: Test
        run: |
          pytest tests -m "not skiplive" -m terraform -n auto --junit-xml=report-aws.xml

      - name: JUnit Report Action
        uses: mikepenz/action-junit-report@v3.3.3
        if: always()
        with:
          report_paths: 'report-aws.xml'
  # TODO: move this to the release file
  Prep:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      checks: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4.2.0
      - name: Bootstrap poetry
        shell: bash
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 1.2.1 -y
      - name: Install c7n
        shell: bash
        run: |
          python -m venv venv
          python -m pip install --upgrade pip
          . venv/bin/activate && pip install -U wheel
          . venv/bin/activate && make install-poetry
          . venv/bin/activate && poetry run pip install -r tools/dev/requirements.txt
      - name: pkg-increment
        shell: bash
        run: |
          . venv/bin/activate && make pkg-increment
          . venv/bin/activate && make pkg-rebase
      - name: Get Version
        id: get_version
        shell: python
        run: |
          from c7n.version import version
          print(f"::set-output name=version::{version}")
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4.1.3
        with:
          title: "releng - ${{ steps.get_version.outputs.version }} pkg increment, rebase"
          commit-message: "releng - ${{ steps.get_version.outputs.version }} pkg increment, rebase"
          branch: "auto/releng/${{ steps.get_version.outputs.version }}"
          delete-branch: true
          base: master
          body: |
            Automated Pull Request: ${{ steps.get_version.outputs.version }}

            Changes made via the make-pkg-increment and make-pkg-rebase commands
